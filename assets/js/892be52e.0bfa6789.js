"use strict";(self.webpackChunkpulsar_docs=self.webpackChunkpulsar_docs||[]).push([[367],{1356:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var s=t(6070),o=t(1503);const i={},c="WebSocket",r={id:"Concepts/websocket",title:"WebSocket",description:"WebSocket is a communication protocol that provides full-duplex communication channels over a single TCP connection.",source:"@site/docs/04-Concepts/04-websocket.md",sourceDirName:"04-Concepts",slug:"/Concepts/websocket",permalink:"/docs/read/Concepts/websocket",draft:!1,unlisted:!1,editUrl:"https://github.com/pulsar-http/docs/tree/main/docs/04-Concepts/04-websocket.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Middleware",permalink:"/docs/read/Concepts/middleware"},next:{title:"Rate Limiter",permalink:"/docs/read/Plugins/rate-limiter"}},a={},d=[{value:"Example",id:"example",level:2},{value:"Summary",id:"summary",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"websocket",children:"WebSocket"})}),"\n",(0,s.jsx)(n.p,{children:"WebSocket is a communication protocol that provides full-duplex communication channels over a single TCP connection."}),"\n",(0,s.jsx)(n.p,{children:"It is used in web applications to provide real-time communication between a client and a server."}),"\n",(0,s.jsxs)(n.p,{children:["Pulsar provides a way to create WebSocket endpoints using the ",(0,s.jsx)(n.code,{children:"websocket"})," option in the ",(0,s.jsx)(n.code,{children:"start"})," function."]}),"\n",(0,s.jsx)(n.p,{children:"It extends the Bun's WebSocket implementation and can be used paired with the authentication middleware."}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsxs)(n.p,{children:["Create a file called ",(0,s.jsx)(n.code,{children:"server.ts"})," and add the following code."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import githubAuthProvider from '@auth/core/providers/github';\nimport { start, router, json, authMiddleware, getSession, type Session } from \"@pulsar-http/core\";\n\nconst routes = [\n    router.get(\"/\", async () => {\n        return json({ message: \"Hello, world!\" });\n    }),\n];\n\nstart<Session | null>({\n    routes,\n    middlewares: [\n        authMiddleware({\n            providers: [\n                githubAuthProvider({\n                    clientId: \"YOUR_CLIENT_ID\",\n                    clientSecret: \"YOUR_SECRET\"\n                }),\n            ]\n        }),\n    ],\n    // WebSocket is exposed on the `/ws` path\n    websocket: {\n        open(ws) {\n            ws.send('Welcome to the chat!');\n\n            ws.subscribe('chat');\n            ws.publish('chat', `${ws.data?.user?.name ?? 'Someone'} joined the chat!`);\n        },\n        message(ws, message) {\n            const user = ws.data?.user?.name ?? 'Someone';\n            const text = `${user}: ${message}`;\n\n            // Send to the current user\n            ws.send(text);\n\n            // Send to all other users\n            ws.publish('chat', text);\n        },\n        close(ws) {\n            ws.publish('chat', `${ws.data?.user?.name ?? 'Someone'} left the chat!`);\n        },\n        options: {\n            canUpgrade: async (req) => {\n                // OPTIONAL: Only allow authenticated users to connect to the websocket\n                const session = await getSession(req);\n                return !!session?.user;\n            },\n            upgrade: async (req) => {\n                // Pass the user data to the websocket connection\n                const session = await getSession(req);\n                return {\n                    data: session\n                }\n            }\n        }\n    }\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can then use your favorite WebSocket client to connect to the server but please note that it is only available on the ",(0,s.jsx)(n.code,{children:"/ws"})," path."]}),"\n",(0,s.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"WebSocket is a communication protocol that provides full-duplex communication channels over a single TCP connection."}),"\n",(0,s.jsxs)(n.li,{children:["Pulsar provides a way to create WebSocket endpoints using the ",(0,s.jsx)(n.code,{children:"websocket"})," option in the ",(0,s.jsx)(n.code,{children:"start"})," function."]}),"\n",(0,s.jsxs)(n.li,{children:["The WebSocket is exposed on the ",(0,s.jsx)(n.code,{children:"/ws"})," path."]}),"\n",(0,s.jsx)(n.li,{children:"It extends the Bun's WebSocket implementation and can be used paired with the authentication middleware."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1503:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var s=t(758);const o={},i=s.createContext(o);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);